DROP DATABASE IF EXISTS Checkpoint2
GO
CREATE DATABASE Checkpoint2
GO

USE Checkpoint2
GO

DROP TABLE IF EXISTS [Event]
GO

CREATE TABLE [Event](event_id INT PRIMARY KEY IDENTITY(1,1),
				     event_name VARCHAR(60) NOT NULL,
				     event_date DATETIME NOT NULL
)
GO 

DROP TABLE IF EXISTS Agenda
GO

CREATE TABLE Agenda(agenda_id INT PRIMARY KEY IDENTITY(1,1),
			 agenda_name VARCHAR(60) NOT NULL,
)
GO

CREATE TABLE EventAgenda(eventAgenda_id INT PRIMARY KEY IDENTITY(1,1),
						FK_event_id INT NOT NULL,
						FOREIGN KEY (FK_event_id) REFERENCES [Event](event_id),
						FK_agenda_id INT NOT NULL,
						FOREIGN KEY (FK_agenda_id) REFERENCES Agenda(agenda_id)
)
GO

DROP TABLE IF EXISTS Campus
GO

CREATE TABLE Campus(campus_id INT PRIMARY KEY IDENTITY(1,1),
                    campus_location VARCHAR(60) NOT NULL
)
GO

DROP TABLE IF EXISTS Cursus
GO

CREATE TABLE Cursus(cursus_id INT PRIMARY KEY IDENTITY(1,1),
				   cursus_name VARCHAR(60) NOT NULL,
				   cursus_startdate DATETIME NOT NULL,
				   cursus_enddate DATETIME NOT NULL,
				   FK_campus_id INT NOT NULL,
				   FOREIGN KEY (FK_campus_id) REFERENCES Campus(campus_id),
			       FK_agenda_id INT NOT NULL,
				   FOREIGN KEY (FK_agenda_id) REFERENCES Agenda(agenda_id),
)
GO

DROP TABLE IF EXISTS Expedition
GO

CREATE TABLE Expedition(expedition_id INT PRIMARY KEY IDENTITY(1,1),
						expedition_startdate DATETIME NOT NULL,
						expedition_enddate DATETIME NOT NULL,
						FK_cursus_id INT NOT NULL,
				        FOREIGN KEY (FK_cursus_id) REFERENCES Cursus(cursus_id),
)
GO

DROP TABLE IF EXISTS Quest
GO

CREATE TABLE Quest(quest_id INT PRIMARY KEY IDENTITY(1,1),
				   quest_author VARCHAR(60) NOT NULL,
				   quest_text VARCHAR(500) NOT NULL,
				   quest_title VARCHAR(60) NOT NULL
)
GO

CREATE TABLE ExpeditionQuest(expeditionQuest_id INT PRIMARY KEY IDENTITY(1,1),
							FK_quest_id INT NOT NULL,
							FOREIGN KEY (FK_quest_id) REFERENCES Quest(quest_id),
							FK_expedition_id INT NOT NULL,
				            FOREIGN KEY (FK_expedition_id) REFERENCES Expedition(expedition_id)
)
GO


DROP TABLE IF EXISTS Person
GO

CREATE TABLE Person(person_id INT PRIMARY KEY IDENTITY(1,1),
                    person_name VARCHAR(60) NOT NULL,
					person_type VARCHAR(60) NOT NULL,
					FK_agenda_id INT NOT NULL,
					FOREIGN KEY (FK_agenda_id) REFERENCES Agenda(agenda_id),
					FK_cursus_id INT NOT NULL,
					FOREIGN KEY (FK_cursus_id) REFERENCES Cursus(cursus_id),
					FK_subordinates_id INT NOT NULL,
					FOREIGN KEY (FK_subordinates_id) REFERENCES Person(person_id)
)
GO

DECLARE @Counter INT = 1
WHILE(@Counter <= 12)
BEGIN
	INSERT INTO [Event]
	(event_name, event_date)
	VALUES
	(CONCAT('Event', @Counter), CONCAT('0',@Counter, '-0',@Counter,'-2020'))
	SET @Counter = @Counter +1
END
GO

DECLARE @Counter INT = 1
WHILE(@Counter <= 4)
BEGIN
	INSERT INTO Agenda
	(agenda_name)
	VALUES
	(CONCAT('Agenda', @Counter))
	SET @Counter = @Counter +1
END
GO

DECLARE @Counter INT = 1
DECLARE @CounterAgendaId INT = 1
WHILE (@Counter <= 12)
BEGIN
	INSERT INTO EventAgenda(FK_event_id, FK_agenda_id)
	VALUES (@Counter, @CounterAgendaId)
	SET @CounterAgendaId= @CounterAgendaId + 1
	IF (@CounterAgendaId =5)
		BEGIN
			SET @CounterAgendaId = 1
		END
	SET @Counter= @Counter + 1
END
GO

DECLARE @Counter INT = 1
WHILE(@Counter <= 30)
BEGIN
	INSERT INTO Quest(quest_author, quest_text, quest_title)
	VALUES (CONCAT('QuestAuthor', @Counter), 'Lorem ipsum dolor sit amet, consectetur adipiscing elit,
	sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
	nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat', CONCAT('QuestTitle',@Counter))
	SET @Counter = @Counter +1
END
GO

INSERT INTO Campus(campus_location)
VALUES ('Paris'), ('Strasbourg'), ('Lyon')
GO



DECLARE @Counter INT = 1
DECLARE @CounterCursusId INT =1
WHILE(@Counter <= 10)
BEGIN
	INSERT INTO Expedition (expedition_startdate, expedition_enddate, FK_cursus_id)
	VALUES (CONCAT('0',@Counter, '-0',@Counter,'-2020'), CONCAT('0',@Counter +1, '-0',@Counter +1,'-2020'), @CounterCursusId)
	SET @CounterCursusId= @CounterCursusId + 1
	IF (@CounterCursusId =4)
		BEGIN
			SET @CounterCursusId = 1
		END
	SET @Counter = @Counter +1
END
GO
