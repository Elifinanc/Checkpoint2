DROP DATABASE IF EXISTS Checkpoint2
GO
CREATE DATABASE Checkpoint2
GO

USE Checkpoint2

CREATE TABLE [Event](event_id INT PRIMARY KEY IDENTITY(1,1),
				     event_name VARCHAR(60) NOT NULL,
				     event_date DATETIME NOT NULL
)
GO 


CREATE TABLE Agenda(agenda_id INT PRIMARY KEY IDENTITY(1,1),
					FK_event_id INT NOT NULL,
					FOREIGN KEY (FK_event_id) REFERENCES [Event](event_id)
)
GO

CREATE TABLE Campus(campus_id INT PRIMARY KEY IDENTITY(1,1),
                    campus_location VARCHAR(60) NOT NULL
)
GO

CREATE TABLE Cursus(cursus_id INT PRIMARY KEY IDENTITY(1,1),
				   cursus_name VARCHAR(60) NOT NULL,
				   cursus_startdate DATETIME NOT NULL,
				   cursus_enddate DATETIME NOT NULL,
				   FK_campus_id INT NOT NULL,
				   FOREIGN KEY (FK_campus_id) REFERENCES Campus(campus_id),
			       FK_agenda_id INT NOT NULL,
				   FOREIGN KEY (FK_agenda_id) REFERENCES Agenda(agenda_id),
)
GO

CREATE TABLE Expedition(expedition_id INT PRIMARY KEY IDENTITY(1,1),
						expedition_startdate DATETIME NOT NULL,
						expedition_enddate DATETIME NOT NULL,
						FK_cursus_id INT NOT NULL,
				        FOREIGN KEY (FK_cursus_id) REFERENCES Cursus(cursus_id),
)
GO

CREATE TABLE Quest(quest_id INT PRIMARY KEY IDENTITY(1,1),
				   quest_author VARCHAR(60) NOT NULL,
				   quest_text VARCHAR(60) NOT NULL,
				   quest_title VARCHAR(60) NOT NULL,
				   FK_expedition_id INT NOT NULL,
				   FOREIGN KEY (FK_expedition_id) REFERENCES Expedition(expedition_id)
)
GO


CREATE TABLE Person(person_id INT PRIMARY KEY IDENTITY(1,1),
                    person_name VARCHAR(60) NOT NULL,
					person_type VARCHAR(60) NOT NULL,
					FK_agenda_id INT NOT NULL,
					FOREIGN KEY (FK_agenda_id) REFERENCES Agenda(agenda_id),
					FK_cursus_id INT NOT NULL,
					FOREIGN KEY (FK_cursus_id) REFERENCES Cursus(cursus_id),
					FK_subordinates_id INT NOT NULL,
					FOREIGN KEY (FK_subordinates_id) REFERENCES Person(person_id)
)
GO
